myData[myData$SESSION_ID %in% congFirstIDs, ]$SESSION_ID <- 1
head(myData, n = 100)
head(myData, n = 200)
head(myData, n = 500)
tail(myData, n = 500)
myData[myData$isCongruentFirst == 1, ]
myData <- read.csv("IATGenderStereo.csv", header = TRUE)
myData <- myData[,-1]
congFirstIDs <- unique(myData[myData$BLOCK_NAME_S == "BLOCK2" & grepl("Math/Male", myData$BLOCK_PAIRING_DEFINITION_S), ]$SESSION_ID)
congFirstIDs
myData <- myData[!(myData$SESSION_ID %in% unique(myData[myData$BLOCK_NAME_S %in% c("BLOCK7", "BLOCK8"),]$SESSION_ID)), ]
myData$isCongruentFirst <- 0
myData[myData$SESSION_ID %in% congFirstIDs, ]$isCongruentFirst <- 1
myData[myData$isCongruentFirst == 1, ]
myData[myData$isCongruentFirst == 0, ]
write.csv(myData, "testIAT.csv", row.names = FALSE)
help(save)
save(myData, file = "IATData.RData")
library(IAT)
getwd()
data("IATData")
head(IATData)
head(myData)
rstudio::viewData(myData)
setwd("~/Documents/college stuffs/grad school/Research/ISCL/Repeated Measures IAT/IAT Package in R/Data")
data("IATData")
IATData <- read.csv("testIAT.csv", header = TRUE)
save(IATData, "IATData.RData")
setwd("~/Documents/college stuffs/grad school/Research/ISCL/Repeated Measures IAT/IAT Package in R/Data")
save(IATData, "IATData.RData")
save(IATData, file = "IATData.RData")
library(IAT)
getwd()
setwd("~/Documents/college stuffs/grad school/Research/ISCL/Repeated Measures IAT/IAT Package in R/IAT/data")
data("IATData")
rm(list = ls())
data("IATData")
library(IAT)
library(IAT)
help(cleanIAT)
data("IATData")
paste0("BLOCK", c(2,3,5,6))
myData <- IATDATA[IATDATA$isCongruentFirst == 0, ]
data("IATData")
myData <- IATDATA[IATDATA$isCongruentFirst == 0, ]
myData <- IATData[IATData$isCongruentFirst == 0, ]
myData <- IATData[IATData$isCongruentFirst == 1, ]
names(myData)
myCleanIAT <- cleanIAT(myData = myData, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)), sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR", vError = 1, vExtreme = 2, vStd = 1)
head(myData)
cleanIAT(myData = myData, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)), sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR", vError = 1, vExtreme = 2, vStd = 1)
str(myData)
paste0("BLOCK", c(2, 3, 5, 6))
myCleanIAT <- cleanIAT(myData = myData, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)), sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR", vError = 1, vExtreme = 2, vStd = 1)
names(myData)
myData = myData; blockName = "BLOCK_NAME_S"; trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)); sessionID = "SESSION_ID"
trialLatency = "TRIAL_LATENCY"; trialError = "TRIAL_ERROR"; vError = 1; vExtreme = 2; vStd = 1
myDataTable <- data.table(myData)
myDataTable$SUBEXCL <- 0
myDataTableNoLong <- myDataTable[get(trialLatency) < 10000 & get(trialLatency) >= 0, ]
myFastTable <- myDataTable[get(blockName) %in% trialBlocks,
list(FASTM = sum(get(trialLatency) < 300)/length(get(trialLatency))),
by = list(ID = get(sessionID))]
isTooFastTable <- myFastTable[FASTM > 0.10,]$ID
setnames(myFastTable, "ID", sessionID)
suppressWarnings(invisible(if(length(isTooFastTable) > 0){myDataTable[get(sessionID) %in% isTooFastTable, SUBEXCL := as.integer(1)]}))
numBlocksTable <- myDataTable[, sum(unique(get(blockName)) %in% trialBlocks), by = get(sessionID)]
notCompleteTable <- numBlocksTable[numBlocksTable$V1 < 4, get]
suppressWarnings(invisible(if(length(notCompleteTable) > 0){myDataTable[get(sessionID) %in% notCompleteTable, SUBEXCL := as.integer(2)]}))
if(vExtreme == 1){
myDataTableNotFast <- myDataTableNoLong
} else if(vExtreme == 2){
myDataTableNotFast <- myDataTableNoLong[get(trialLatency) >= 400, ]
} else stop("Please pick a value of 1 or 2 for vExtreme.")
if(vError == 1){
blockMeansTable <- myDataTableNotFast[, list(M = mean(get(trialLatency)), N = length(get(trialLatency))), by = list(ID = get(sessionID), Block = get(blockName))]
} else if (vError == 2){
myMeanReplaceTable <- myDataTableNotFast[get(trialError) == 0, list(myBlockMean = mean(get(trialLatency)) + 600), by = list(ID = get(sessionID), block = get(blockName))]
setnames(myMeanReplaceTable, c("ID", "block"), c(sessionID, blockName))
myMergeTable <- merge(myDataTableNotFast, myMeanReplaceTable, by = c(sessionID, blockName), all = TRUE)
myDataTableNotFast$tmpLatency <- myDataTableNotFast[, get(trialLatency)]
suppressWarnings(myDataTableNotFast[get(trialError) == 1, ]$tmpLatency <- myMergeTable[get(trialError) == 1, myBlockMean])
setnames(myDataTableNotFast, c(trialLatency, "tmpLatency"), c("oldLatency", trialLatency))
blockMeansTable <- myDataTableNotFast[, list(M = mean(get(trialLatency)), N = length(get(trialLatency))), by = list(ID = get(sessionID), block = get(blockName))]
setnames(blockMeansTable, "block", blockName)
} else stop("Please pick a value of 1 or 2 for vError.")
myDataTableNotFast$blockPairs <- as.character(myDataTableNotFast[, get(blockName)])
myDataTableNotFast[get(blockName) %in% trialBlocks[c(1,3)], ]$blockPairs <- "S1"
myDataTableNotFast[get(blockName) %in% trialBlocks[c(2,4)], ]$blockPairs <- "S2"
bloPaString <- "blockPairs"
allTableSDs <- merge(myDataTableNotFast[get(blockName) %in% trialBlocks, list(A = sd(get(trialLatency))), by = list(ID = get(sessionID), blockPairs = get(bloPaString))],
myDataTableNotFast[get(blockName) %in% trialBlocks & get(trialError) == 0, list(C = sd(get(trialLatency))), by = list(ID = get(sessionID), blockPairs = get(bloPaString))],
by = c("ID", "blockPairs"))
blockMeansTableWide <- merge(reshape(allTableSDs, v.names = c("A", "C"), idvar = "ID", timevar = "blockPairs", direction = "wide", sep = ""),
reshape(blockMeansTable, v.names = c("M", "N"), idvar = "ID", timevar = blockName, direction = "wide", sep = ""),
by = "ID")
allTableSDs
reshape(blockMeansTable, v.names = c("M", "N"), idvar = "ID", timevar = blockName, direction = "wide", sep = "")
blockName
blockMeansTable
blockName
setnames(blockMeansTable, "block", blockName)
blockMeansTable
setnames(blockMeansTable, "Block", blockName)
myDataTableNotFast$blockPairs <- as.character(myDataTableNotFast[, get(blockName)])
myDataTableNotFast[get(blockName) %in% trialBlocks[c(1,3)], ]$blockPairs <- "S1"
myDataTableNotFast[get(blockName) %in% trialBlocks[c(2,4)], ]$blockPairs <- "S2"
bloPaString <- "blockPairs"
allTableSDs <- merge(myDataTableNotFast[get(blockName) %in% trialBlocks, list(A = sd(get(trialLatency))), by = list(ID = get(sessionID), blockPairs = get(bloPaString))],
myDataTableNotFast[get(blockName) %in% trialBlocks & get(trialError) == 0, list(C = sd(get(trialLatency))), by = list(ID = get(sessionID), blockPairs = get(bloPaString))],
by = c("ID", "blockPairs"))
blockMeansTableWide <- merge(reshape(allTableSDs, v.names = c("A", "C"), idvar = "ID", timevar = "blockPairs", direction = "wide", sep = ""),
reshape(blockMeansTable, v.names = c("M", "N"), idvar = "ID", timevar = blockName, direction = "wide", sep = ""),
by = "ID")
rm(list = ls())
data("IATData")
myData <- IATData[IATData$isCongruentFirst == 1, ]
myCleanIAT <- cleanIAT(myData = myData, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)), sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR", vError = 1, vExtreme = 2, vStd = 1)
myCleanIAT <- cleanIAT(myData = myData, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)), sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR", vError = 1, vExtreme = 2, vStd = 1)
data("IATData")
myData <- IATData[IATData$isCongruentFirst == 1, ]
myCleanIAT <- cleanIAT(myData = myData, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)), sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR", vError = 1, vExtreme = 2, vStd = 1)
library(IAT)
myCleanIAT
cleanIAT(myData = myData, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)), sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR", vError = 1, vExtreme = 2, vStd = 1)
myDataCongFirst <- IATData[IATData$isCongruentFirst == 1, ]
myDScoreCongFirst <- cleanIAT(myData = myDataCongFirst, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID", trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR",
vError = 1, vExtreme = 2, vStd = 1)
myDataCongSec <- IATData[IATData$isCongruentFirst == 0, ]
myDScoreCongSec <- cleanIAT(myData = myDataCongSec, blockName = "BLOCK_NAME_S", trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID", trialLatency = "TRIAL_LATENCY", trialError = "TRIAL_ERROR",
vError = 1, vExtreme = 2, vStd = 1)
myDScore <- rbind(myDScoreCongFirst, myDScoreCongSec)
myDScore
plot(density(myDScore$IAT))
myDScore$IAT
library(IAT)
library(IAT)
library(IAT)
FASTM <- NULL
library(IAT)
library(IAT)
help(IAT)
help(IATData)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
require(MASS)
help(chickwts)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
names(IATData)
head(IATData)
library(IAT)
library(IAT)
library(IAT)
data("IATData")
myDataCongFirst <- IATData[IATData$isCongruentFirst == 1, ]
head(myDataCongFirst)
plotIIV(myData = myDataCongFirst, dataType = "raw",
blockName = "BLOCK_NAME_S",
trialBlocks = trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
plotIIV(myData = myDataCongFirst, dataType = "raw",
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
data("IATData")
library(IAT)
myDataCongFirst <- IATData[IATData$isCongruentFirst == 1, ]
plotIIV(myData = myDataCongFirst, dataType = "clean",
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
head(IATData)
myDataCongFirst <- IATData[IATData$isCongruentFirst == 1, ]
plotItemVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S"
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
library(IAT)
plotItemVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
library(IAT)
library(IAT)
library(IAT)
library(IAT)
plotItemVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
library(IAT)
plotIndVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
plotItemVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
plotIndVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
head(IATData)
library(IAT)
rm(list = ls())
data(IATData)
help(cleanIAT)
myDataCongFirst <- IATData[IATData$isCongruentFirst == 1, ]
myDScoreCongFirst <- cleanIAT(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR",
vError = 1, vExtreme = 2, vStd = 1)
myDScoreCongFirst
help(plotIIV)
help(cleanIAT)
help(plotIIV)
plotIIV(myData = myDataCongFirst, dataType = "clean",
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
plotIIV(myData = myDataCongFirst, dataType = "raw",
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
help(plotIIV)
help(plotIndVar)
plotIndVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
help(plotItemVar)
plotItemVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
plotIndVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
help(plotItemErr)
plotItemErr(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
getwd()
library(IAT)
library(IAT)
install.packages("IAT")
install.packages("IAT")
install.packages("IAT")
?data
require(roxygen2); require(devtools)
require("roxygen2"); require("devtools")
install.packages("roxygen")
install.github("devtools", "hadley")
install_github("devtools", "hadley")
require(devtools)
install.pacakges("devtools")
install.packages("devtools")
require(devtools)
install_github("devtools", "hadley")
install.packages("roxygen2")
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
setwd("~/Documents/college stuffs/grad school/Research/ISCL/Repeated Measures IAT/IAT Package in R/IAT")
warnings()
setwd("~/Documents/college stuffs/grad school/Research/ISCL/Repeated Measures IAT/IAT Package in R/IAT/data")
warnings()
install.packages("data.table")
install.packages("ggplot2")
install.packages("plyr")
install.packages("MASS")
install.packages("MASS")
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
require(MASS)
data()
aids2
Aids2
install.packages("MASS")
install.packages("MASS")
require(MASS)
Aids2
head(Aids2)
setwd("~/Documents/college stuffs/grad school/Research/ISCL/Repeated Measures IAT/IAT Package in R/IAT/data")
warnings()
load("IATData.RData")
getwd()
library(IAT)
library(IAT)
library(IAT)
library(IAT)
head(IATData)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
?data
IATData
IATData[IATData$isCongruentFirst == 1, ]
require(MASS)
nrow(Aids2)
library(IAT)
library(IAT)
data("IATData")
library(IAT)
library(IAT)
library(IAT)
?globalVariable
?globalVariables
?data
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
data("IATData")
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
data("IATData")
myDataCongFirst <- IATData[IATData$isCongruentFirst == 1, ]
plotIIV(myData = myDataCongFirst, dataType = "clean",
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
plotIIV(myData = myDataCongFirst, dataType = "clean",
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
data("IATData")
myDataCongFirst <- IATData[IATData$isCongruentFirst == 1, ]
p <- plotItemVar(myData = myDataCongFirst,
blockName = "BLOCK_NAME_S",
trialBlocks = paste0("BLOCK", c(2, 3, 5, 6)),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
library(IAT)
data("IATData", envir = .BaseNamespaceEnv)
library(IAT)
library(IAT)
rm(list = ls())
setwd("~/Documents/college stuffs/grad school/Research/ISCL/Repeated Measures IAT/IAT Package in R")
head(IATData)
plotItemErr(myData = IATData,
blockName = "BLOCK_NAME_S",
trialBlocks = c("B2", "B3", "B5", "B6"),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
help(plotIIV)
plotIIV(myData = IATData, dataType = "raw",
blockName = "BLOCK_NAME_S",
trialBlocks = c("B2", "B3", "B5", "B6"),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
myData = IATData
dataType = "raw"
blockName = "BLOCK_NAME_S"
trialBlocks = c("B2", "B3", "B5", "B6")
sessionID = "SESSION_ID"
trialNumber = "TRIAL_NUMBER"
trialLatency = "TRIAL_LATENCY"
myDataNew <- myData[myData[, blockName] %in% trialBlocks, ]
myDataNew
myData
trialBlocks
blockName
myData[, blockName]
head(myData)
head(myData)
plotIIV(myData = IATData, dataType = "raw",
blockName = "BLOCK_NAME_S",
trialBlocks = c("BLOCK2", "BLOCK3", "BLOCK5", "BLOCK6"),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
plotItemErr(myData = IATData,
blockName = "BLOCK_NAME_S",
trialBlocks = c("BLOCK2", "BLOCK3", "BLOCK5", "BLOCK6"),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
plotIIV(myData = IATData, dataType = "raw",
blockName = "BLOCK_NAME_S",
trialBlocks = c("BLOCK2", "BLOCK3", "BLOCK5", "BLOCK6"),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
plotIIV(myData = IATData, dataType = "clean",
blockName = "BLOCK_NAME_S",
trialBlocks = c("BLOCK2", "BLOCK3", "BLOCK5", "BLOCK6"),
sessionID = "SESSION_ID",
trialNumber = "TRIAL_NUMBER",
trialLatency = "TRIAL_LATENCY")
help(plotIIV)
help(plotItemVar)
help(plotIndVar)
plotIndVar(myData = IATData, dataType = "clean",
blockName = "BLOCK_NAME_S",
trialBlocks = c("BLOCK2", "BLOCK3", "BLOCK5", "BLOCK6"),
sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
plotIndVar(myData = IATData,
blockName = "BLOCK_NAME_S",
trialBlocks = c("BLOCK2", "BLOCK3", "BLOCK5", "BLOCK6"),
sessionID = "SESSION_ID",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
plotItemVar(myData = IATData,
blockName = "BLOCK_NAME_S",
trialBlocks = c("BLOCK2", "BLOCK3", "BLOCK5", "BLOCK6"),
sessionID = "SESSION_ID",
itemName = "TRIAL_NAME_S",
trialLatency = "TRIAL_LATENCY",
trialError = "TRIAL_ERROR")
install.packages("IAT")
install.packages("IAT")
require(IAT)
library(IAT)
